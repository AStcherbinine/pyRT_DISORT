
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/unsorted/plot_rayleigh_scattering.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_unsorted_plot_rayleigh_scattering.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_unsorted_plot_rayleigh_scattering.py:


Rayleigh scattering
===================

Plot Rayleigh scattering optical depths

.. GENERATED FROM PYTHON SOURCE LINES 10-11

First import everything needed for this example.

.. GENERATED FROM PYTHON SOURCE LINES 11-15

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np
    import pyrt








.. GENERATED FROM PYTHON SOURCE LINES 16-18

Rayleigh scattering depends on 2 factors: wavelength and column density.
Let's create wavelengths to compute the column optical depth at.

.. GENERATED FROM PYTHON SOURCE LINES 18-20

.. code-block:: default

    wavelengths = np.linspace(0.1, 1, num=100)








.. GENERATED FROM PYTHON SOURCE LINES 21-26

Now let's make the column density. I'll assume the pressure profile decreases
exponentially with altitude (with scale height of 10 km) and a constant
temperature profile. The column density function can compute column density
from functions of pressure and temperature that are both dependent on
altitude. The function's inputs go into the pressure and temperature args.

.. GENERATED FROM PYTHON SOURCE LINES 26-30

.. code-block:: default

    altitude = np.linspace(100, 0, num=15)
    column_density = pyrt.column_density(
        pyrt.exponential_profile, pyrt.constant_profile, altitude, (610, 10), (150,))








.. GENERATED FROM PYTHON SOURCE LINES 31-32

Now we can turn these into Rayleigh scattering optical depths.

.. GENERATED FROM PYTHON SOURCE LINES 32-35

.. code-block:: default

    od = pyrt.rayleigh_co2_optical_depth(column_density, pyrt.wavenumber(wavelengths))
    print(od.shape)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    (14, 100)




.. GENERATED FROM PYTHON SOURCE LINES 36-39

These are the Rayleigh scattering optical depths in each layer at each
wavelength. We just need to sum over the columns to get the column integrated
optical depths.

.. GENERATED FROM PYTHON SOURCE LINES 39-69

.. code-block:: default


    plt.rc('mathtext', fontset='stix')
    plt.rc('font', **{'family': 'STIXGeneral'})
    plt.rc('font', size=8)
    plt.rc('axes', titlesize=12)
    plt.rc('axes', labelsize=12)
    plt.rc('xtick', labelsize=12)
    plt.rc('ytick', labelsize=12)
    plt.rc('legend', fontsize=12)
    plt.rc('figure', titlesize=12)
    plt.rc('pdf', fonttype=42)
    plt.rc('ps', fonttype=42)
    plt.rc('lines', linewidth=0.5)
    plt.rc('axes', linewidth=0.5)
    plt.rc('xtick.major', width=0.5)
    plt.rc('xtick.minor', width=0.5)
    plt.rc('ytick.major', width=0.5)
    plt.rc('ytick.minor', width=0.5)
    dpi = 150

    fig, ax = plt.subplots()
    ax.semilogy(wavelengths * 1000, np.sum(od, axis=0))

    ax.set_xlim(100, 1000)
    ax.set_ylim(10**-4, 10)
    ax.set_xlabel('Wavelength [nm]')
    ax.set_ylabel('Column integrated optical depth')
    ax.set_xticks(np.linspace(100, 1000, num=1000//100))
    ax.set_xticks(np.linspace(100, 1000, num=1000//50-1), minor=True)
    plt.show()



.. image-sg:: /examples/unsorted/images/sphx_glr_plot_rayleigh_scattering_001.png
   :alt: plot rayleigh scattering
   :srcset: /examples/unsorted/images/sphx_glr_plot_rayleigh_scattering_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.264 seconds)


.. _sphx_glr_download_examples_unsorted_plot_rayleigh_scattering.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_rayleigh_scattering.py <plot_rayleigh_scattering.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_rayleigh_scattering.ipynb <plot_rayleigh_scattering.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
