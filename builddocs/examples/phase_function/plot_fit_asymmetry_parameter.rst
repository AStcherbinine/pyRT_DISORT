
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/phase_function/plot_fit_asymmetry_parameter.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_phase_function_plot_fit_asymmetry_parameter.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_phase_function_plot_fit_asymmetry_parameter.py:


Fit Asymmetry Parameter
=======================

Fit an asymmetry parameter to a phase function and plot the Henyey-Greenstein
phase function.

.. GENERATED FROM PYTHON SOURCE LINES 11-12

First import everything needed for this example.

.. GENERATED FROM PYTHON SOURCE LINES 12-16

.. code-block:: default

    import matplotlib.pyplot as plt
    import numpy as np
    import pyrt








.. GENERATED FROM PYTHON SOURCE LINES 17-19

Let's grab a strongly forward scattering phase function and the angles over
which it is defined.

.. GENERATED FROM PYTHON SOURCE LINES 19-23

.. code-block:: default

    dust_dir = '/home/kyle/repos/pyRT_DISORT/anc/mars_dust/'
    phase_function = np.load(dust_dir + 'phase_function.npy')[:, 23, 0]
    scattering_angles = np.load(dust_dir + 'scattering_angles.npy')








.. GENERATED FROM PYTHON SOURCE LINES 24-25

Fit an asymmetry parameter to this phase function.

.. GENERATED FROM PYTHON SOURCE LINES 25-28

.. code-block:: default

    g = pyrt.fit_asymmetry_parameter(phase_function, scattering_angles)
    print(g)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    0.920991966497843




.. GENERATED FROM PYTHON SOURCE LINES 29-33

We can construct a Henyey-Greenstein phase function from this asymmetry
parameter. Let's do this, multiply by 4*pi since the
Henyey-Greenstein phase function is normalized to 1, and see how well it
matches the original phase function.

.. GENERATED FROM PYTHON SOURCE LINES 33-67

.. code-block:: default

    hg_pf = pyrt.construct_hg(g, scattering_angles) * 4 * np.pi

    plt.rc('mathtext', fontset='stix')
    plt.rc('font', **{'family': 'STIXGeneral'})
    plt.rc('font', size=8)
    plt.rc('axes', titlesize=12)
    plt.rc('axes', labelsize=12)
    plt.rc('xtick', labelsize=12)
    plt.rc('ytick', labelsize=12)
    plt.rc('legend', fontsize=12)
    plt.rc('figure', titlesize=12)
    plt.rc('pdf', fonttype=42)
    plt.rc('ps', fonttype=42)
    plt.rc('lines', linewidth=0.5)
    plt.rc('axes', linewidth=0.5)
    plt.rc('xtick.major', width=0.5)
    plt.rc('xtick.minor', width=0.5)
    plt.rc('ytick.major', width=0.5)
    plt.rc('ytick.minor', width=0.5)
    dpi = 150

    fig, ax = plt.subplots()
    ax.semilogy(scattering_angles, phase_function,
                label='Original phase function')
    ax.semilogy(scattering_angles, hg_pf,
                label='Fit H-G phase function')
    plt.legend()
    ax.set_xlim(0, 180)
    ax.set_ylim(10**-2, 10**4)
    ax.set_xlabel('Scattering Angle [degrees]')
    ax.set_ylabel('Phase Function')
    ax.set_xticks(np.linspace(0, 180, num=180//30+1))
    ax.set_xticks(np.linspace(0, 180, num=180//10+1), minor=True)
    plt.show()



.. image-sg:: /examples/phase_function/images/sphx_glr_plot_fit_asymmetry_parameter_001.png
   :alt: plot fit asymmetry parameter
   :srcset: /examples/phase_function/images/sphx_glr_plot_fit_asymmetry_parameter_001.png
   :class: sphx-glr-single-img






.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.318 seconds)


.. _sphx_glr_download_examples_phase_function_plot_fit_asymmetry_parameter.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_fit_asymmetry_parameter.py <plot_fit_asymmetry_parameter.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_fit_asymmetry_parameter.ipynb <plot_fit_asymmetry_parameter.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
