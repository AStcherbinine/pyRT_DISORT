###############
Rover Retrieval
###############
This tutorial will walk you through how to simulate reflectance spectra of an
atmosphere containing Martian dust as though it were observed from a rover.
Then, we'll use these simulations to perform a retrieval. Along the way I'll
demonstrate some not-strictly-necessary features included in pyRT_DISORT that
may make your life easier.

Each step will show off one of the modules included in pyRT_DISORT. For an
in-depth look at them, check out :doc:`../api-reference`.

.. note::
   For efficiency, pyRT_DISORT does computations using
   `ndarray
   <https://numpy.org/doc/stable/reference/generated/numpy.ndarray.html>`_
   objects whenever possible.

The modules in pyRT_DISORT are designed to operate independently---that is,
(generally speaking) you won't need to input a class instance into another
class. All the relevant classes can be instantiated from scratch, and you
can choose to completely skip making some of these classes to your heart's
content. That also means that the order in which you make these modules
doesn't matter for the most part. I'm going to go through them in a way that's
sensible to me, but there's no drawback to ordering them a different way when
you adapt them to your own code.

.. note::
   I started radiative transfer by working with Martian dust (hence the
   example) and therefore use arrays of dust properties when testing the code.
   I'll provide these arrays for the example, but you'll need to make arrays of
   the properties for whatever aerosols are relevant to your work.

.. toctree::
   :maxdepth: 1
   :caption: A sample retrieval from the surface

   rover_retrieval/observation

.. warning::
   This is under construction...
