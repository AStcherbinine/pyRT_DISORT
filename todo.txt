To-dos:
- observation.Angles
--- Latex docstinrgs
--- I don't think all possible combination of angles is mathematically possible.
--- Some functions do more than one thing
--- Is there a better way to make phi?

- observation.Wavelengths
--- Do I want to require monotonically increasing wavelengths?
--- Some functions do more than one thing

- setup.py
--- It don't do

- doc.make_documentation
--- Get it to work + clean it up















Fixes:
--- Combine most recent dust files into a 3D .fits file
--- Combine most recent ice files in to a 3D .fits file
--- Check I can make a 1 layer atmosphere
--- Remake the examples with the new classes
--- ModelGrid might need a better name since altitude_grid is a parameter in InputAtmosphere (the word "grid" clashes)
--- ModelGrid should use Gaussian quadrature for the integral
--- ModelGrid should do integral in log(z) space
--- Remove the AerosolChecker classes

Additions:
--- Unit tests
--- Integrated tests
--- Make ice PMOM
--- Add ozone
--- Add an efficient solver
--- Parallelize over wavelength / observations (pixels)
--- Rewrite the test cases using my classes
--- Correlated k
--- T-matrix

Design thoughts:
--- Is there a better way besides telling the user the columns in an input file must be in a specified order?

Tests:
--- What happens when phase functions are defined at different wavelengths? Like dust and ice at short wavs
--- Add checks throughout to ensure the same wavelengths, moments, etc. are used. We don't want one aerosol observed
    at different wavelenghts than another. Also ensure they CAN have different r_effective
--- Make sure if I have 100 particle sizes, things don't go haywire...