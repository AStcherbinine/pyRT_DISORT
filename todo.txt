Design
--- UU outputs a bunch of junk 0s in addition to "good" values---fix that?
--- Specify layers independent of mars_atm.inp?

Assumptions
--- Every aerosol will have a dust.npy-type file
--- ice.npy / dust.npy have the columns specified in the correct order
--- mars_atm.npy has the columns specified in the correct order
--- Every aerosol will either be HG or use a 3D phase function file

Questions:
--- What are the 2 additional columns in ice?
--- What are pivot pressures/altitudes/temperatures?

Test:
--- Make sure if I have 100 particle sizes, things don't go haywire...

Fix:
--- Remove old phase functions + generally unnecessary aux files

Work on next:
--- Make ice PMOM
--- Add ability to directly input np array to phase_functions.py
--- Thoroughly test __check_shapes_match()
--- Add plain text phsfn reader
--- Combine radii + wavelengths into 1 phase function file
--- Parallelize over wavelength / observations (pixels)
--- Ensure Column can accommodate different profiles for different particle sizes
--- OD cannot be 0 since weights sum to 0
--- Add ozone
--- Fix strings to f strings
--- Fix defining self.wavelenghts / self.particle_sizes in PhaseFunction.expand_dimensions()
--- assert() might be better to raise ValueError('myMessage') or something
--- Move all the asserts in __init__ into a function... since they just check the inputs are good
--- Solver
--- numba?
--- Add checks throughout to ensure the same wavelengths, moments, etc. are used. We don't want one aerosol observed
    at different wavelenghts than another. Also ensure they CAN have different r_effective
--- Unit tests
--- Postprocessing
--- Correlated k
--- T-matrix?
--- Set a max_moments in phase_functions.py in case user doesn't believe all the moments they have
--- Rewrite the test cases using my objects
